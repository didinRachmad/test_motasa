import {
  require_jquery
} from "./chunk-W7XVOHYT.js";
import {
  __commonJS
} from "./chunk-LK32TJAX.js";

// node_modules/metismenu/dist/metisMenu.min.js
var require_metisMenu_min = __commonJS({
  "node_modules/metismenu/dist/metisMenu.min.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = t(require_jquery()) : "function" == typeof define && define.amd ? define(["jquery"], t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).metisMenu = t(e.$);
    }(exports, function(e) {
      "use strict";
      function t(e2) {
        return e2 && "object" == typeof e2 && "default" in e2 ? e2 : { default: e2 };
      }
      var n = t(e);
      const i = ((e2) => {
        const t2 = "transitionend", n2 = { TRANSITION_END: "mmTransitionEnd", triggerTransitionEnd(n3) {
          e2(n3).trigger(t2);
        }, supportsTransitionEnd: () => Boolean(t2) };
        function i2(t3) {
          let i3 = false;
          return e2(this).one(n2.TRANSITION_END, () => {
            i3 = true;
          }), setTimeout(() => {
            i3 || n2.triggerTransitionEnd(this);
          }, t3), this;
        }
        return e2.fn.mmEmulateTransitionEnd = i2, e2.event.special[n2.TRANSITION_END] = { bindType: t2, delegateType: t2, handle(t3) {
          if (e2(t3.target).is(this)) return t3.handleObj.handler.apply(this, arguments);
        } }, n2;
      })(n.default), s = "metisMenu", r = "metisMenu", a = n.default.fn[s], o = { toggle: true, preventDefault: true, triggerElement: "a", parentTrigger: "li", subMenu: "ul" }, l = { SHOW: "show.metisMenu", SHOWN: "shown.metisMenu", HIDE: "hide.metisMenu", HIDDEN: "hidden.metisMenu", CLICK_DATA_API: "click.metisMenu.data-api" }, d = "metismenu", g = "mm-active", h = "mm-show", u = "mm-collapse", f = "mm-collapsing";
      class c {
        constructor(e2, t2) {
          this.element = e2, this.config = { ...o, ...t2 }, this.transitioning = null, this.init();
        }
        init() {
          const e2 = this, t2 = this.config, i2 = n.default(this.element);
          i2.addClass(d), i2.find(`${t2.parentTrigger}.${g}`).children(t2.triggerElement).attr("aria-expanded", "true"), i2.find(`${t2.parentTrigger}.${g}`).parents(t2.parentTrigger).addClass(g), i2.find(`${t2.parentTrigger}.${g}`).parents(t2.parentTrigger).children(t2.triggerElement).attr("aria-expanded", "true"), i2.find(`${t2.parentTrigger}.${g}`).has(t2.subMenu).children(t2.subMenu).addClass(`${u} ${h}`), i2.find(t2.parentTrigger).not(`.${g}`).has(t2.subMenu).children(t2.subMenu).addClass(u), i2.find(t2.parentTrigger).children(t2.triggerElement).on(l.CLICK_DATA_API, function(i3) {
            const s2 = n.default(this);
            if ("true" === s2.attr("aria-disabled")) return;
            t2.preventDefault && "#" === s2.attr("href") && i3.preventDefault();
            const r2 = s2.parent(t2.parentTrigger), a2 = r2.siblings(t2.parentTrigger), o2 = a2.children(t2.triggerElement);
            r2.hasClass(g) ? (s2.attr("aria-expanded", "false"), e2.removeActive(r2)) : (s2.attr("aria-expanded", "true"), e2.setActive(r2), t2.toggle && (e2.removeActive(a2), o2.attr("aria-expanded", "false"))), t2.onTransitionStart && t2.onTransitionStart(i3);
          });
        }
        setActive(e2) {
          n.default(e2).addClass(g);
          const t2 = n.default(e2).children(this.config.subMenu);
          t2.length > 0 && !t2.hasClass(h) && this.show(t2);
        }
        removeActive(e2) {
          n.default(e2).removeClass(g);
          const t2 = n.default(e2).children(`${this.config.subMenu}.${h}`);
          t2.length > 0 && this.hide(t2);
        }
        show(e2) {
          if (this.transitioning || n.default(e2).hasClass(f)) return;
          const t2 = n.default(e2), s2 = n.default.Event(l.SHOW);
          if (t2.trigger(s2), s2.isDefaultPrevented()) return;
          if (t2.parent(this.config.parentTrigger).addClass(g), this.config.toggle) {
            const e3 = t2.parent(this.config.parentTrigger).siblings().children(`${this.config.subMenu}.${h}`);
            this.hide(e3);
          }
          t2.removeClass(u).addClass(f).height(0), this.setTransitioning(true);
          t2.height(e2[0].scrollHeight).one(i.TRANSITION_END, () => {
            this.config && this.element && (t2.removeClass(f).addClass(`${u} ${h}`).height(""), this.setTransitioning(false), t2.trigger(l.SHOWN));
          }).mmEmulateTransitionEnd(350);
        }
        hide(e2) {
          if (this.transitioning || !n.default(e2).hasClass(h)) return;
          const t2 = n.default(e2), s2 = n.default.Event(l.HIDE);
          if (t2.trigger(s2), s2.isDefaultPrevented()) return;
          t2.parent(this.config.parentTrigger).removeClass(g), t2.height(t2.height())[0].offsetHeight, t2.addClass(f).removeClass(u).removeClass(h), this.setTransitioning(true);
          const r2 = () => {
            this.config && this.element && (this.transitioning && this.config.onTransitionEnd && this.config.onTransitionEnd(), this.setTransitioning(false), t2.trigger(l.HIDDEN), t2.removeClass(f).addClass(u));
          };
          0 === t2.height() || "none" === t2.css("display") ? r2() : t2.height(0).one(i.TRANSITION_END, r2).mmEmulateTransitionEnd(350);
        }
        setTransitioning(e2) {
          this.transitioning = e2;
        }
        dispose() {
          n.default.removeData(this.element, r), n.default(this.element).find(this.config.parentTrigger).children(this.config.triggerElement).off(l.CLICK_DATA_API), this.transitioning = null, this.config = null, this.element = null;
        }
        static jQueryInterface(e2) {
          return this.each(function() {
            const t2 = n.default(this);
            let i2 = t2.data(r);
            const s2 = { ...o, ...t2.data(), ..."object" == typeof e2 && e2 ? e2 : {} };
            if (i2 || (i2 = new c(this, s2), t2.data(r, i2)), "string" == typeof e2) {
              if (void 0 === i2[e2]) throw new Error(`No method named "${e2}"`);
              i2[e2]();
            }
          });
        }
      }
      return n.default.fn[s] = c.jQueryInterface, n.default.fn[s].Constructor = c, n.default.fn[s].noConflict = () => (n.default.fn[s] = a, c.jQueryInterface), c;
    });
  }
});
export default require_metisMenu_min();
/*! Bundled license information:

metismenu/dist/metisMenu.min.js:
  (*!
  * metismenu https://github.com/onokumus/metismenu#readme
  * A collapsible jQuery menu plugin
  * @version 3.0.7
  * @author Osman Nuri Okumus <onokumus@gmail.com> (https://github.com/onokumus)
  * @license: MIT 
  *)
*/
//# sourceMappingURL=metismenu_dist_metisMenu__min__js.js.map
